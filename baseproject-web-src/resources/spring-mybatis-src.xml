<?xml version="1.0" encoding="UTF-8"?>
<beans 
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
         http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
     
	<description>Spring数据及AOP配置数据源1 </description>

	<!-- 数据源配置,使用应用内的C3P0数据库连接池 -->
	<bean id="dataSource1" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url1}" />
		<property name="user" value="${jdbc.username1}" />
		<property name="password" value="${jdbc.password1}" />
		
		<property name="acquireIncrement" value="${jdbc.acquireIncrement}" />
		<property name="acquireRetryAttempts" value="${jdbc.acquireRetryAttempts}" />
		<property name="acquireRetryDelay" value="${jdbc.acquireRetryDelay}" />
		<property name="checkoutTimeout" value="${jdbc.checkoutTimeout}" />
		<property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}" />
		<property name="initialPoolSize" value="${jdbc.initialPoolSize}" />
		<property name="maxIdleTime" value="${jdbc.maxIdleTime}" />
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
		<property name="numHelperThreads" value="${jdbc.numHelperThreads}" />
	</bean>

     <bean id="jdbcTemplate1" class="org.springframework.jdbc.core.JdbcTemplate" >  
        <property name="dataSource" ref="dataSource1" />  
     </bean>  
     
      <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	  <bean id="sqlSessionFactory1" class="org.mybatis.spring.SqlSessionFactoryBean">
	    <property name="dataSource" ref="dataSource1" />
	    <!-- 自动扫描mapping.xml文件 -->
	    <property name="mapperLocations" value="classpath:com/hexun/jndi/mapperxml/*.xml"></property>
	  </bean>
	  <bean id="sqlSessionTemplate1" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory1" />
	  </bean>
	
	  <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	    <property name="basePackage" value="com.hexun.jndi.mapper" />
	    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory1"></property>
	  </bean>
	  
	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager1"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource1" />
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager1" proxy-target-class="true" />
	
	<tx:advice id="txAdvice1" transaction-manager="transactionManager1">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="do*" propagation="REQUIRED" />
			<tx:method name="publish*" propagation="REQUIRED" />
			<tx:method name="write*" propagation="REQUIRED" />
			<tx:method name="*" propagation="REQUIRED" read-only="true" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config proxy-target-class="true">
	    <aop:pointcut id="serviceMethods1" expression="execution(* com.hexun.jndi..service..*.*(..))"/>
	    <aop:advisor advice-ref="txAdvice1" pointcut-ref="serviceMethods1"/>
  	</aop:config>
</beans>